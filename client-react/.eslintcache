[{"C:\\xampp\\htdocs\\product\\client-react\\src\\index.js":"1","C:\\xampp\\htdocs\\product\\client-react\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\product\\client-react\\src\\App.js":"3","C:\\xampp\\htdocs\\product\\client-react\\src\\component\\privateRoute.js":"4","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\store.js":"5","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\authAction.js":"6","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\authReducer.js":"7","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\index.js":"8","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\authType.js":"9","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\userAction.js":"10","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\userType.js":"11","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\userReducer.js":"12","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\categoryAction.js":"13","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\categoryType.js":"14","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\categoryReducer.js":"15","C:\\xampp\\htdocs\\product\\client-react\\src\\util.js\\setAuthToken.js":"16","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\homepage\\home.js":"17","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\shared\\header.js":"18","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\shared\\footer.js":"19","C:\\xampp\\htdocs\\product\\client-react\\src\\routes\\routes.js":"20","C:\\xampp\\htdocs\\product\\client-react\\src\\util.js\\privateRoute.js":"21","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\register\\register.js":"22","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\layout.js":"23","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\login\\login.js":"24","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\layout.js":"25","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\product.js":"26","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\profile.js":"27","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\category.js":"28","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\dashbaord.js":"29","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\dashbaord.js":"30","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\multi_upload.js":"31","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\signle_upload.js":"32","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\alluser.js":"33","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\loaderReducer.js":"34"},{"size":381,"mtime":1611036402949,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":1143,"mtime":1615266033042,"results":"38","hashOfConfig":"36"},{"size":834,"mtime":1612943659027,"results":"39","hashOfConfig":"36"},{"size":700,"mtime":1614942989472,"results":"40","hashOfConfig":"36"},{"size":2399,"mtime":1615202129646,"results":"41","hashOfConfig":"36"},{"size":996,"mtime":1615014066733,"results":"42","hashOfConfig":"36"},{"size":277,"mtime":1614943014021,"results":"43","hashOfConfig":"36"},{"size":234,"mtime":1614938401759,"results":"44","hashOfConfig":"36"},{"size":1741,"mtime":1614940973155,"results":"45","hashOfConfig":"36"},{"size":156,"mtime":1610771194816,"results":"46","hashOfConfig":"36"},{"size":883,"mtime":1610794615251,"results":"47","hashOfConfig":"36"},{"size":2279,"mtime":1615266775038,"results":"48","hashOfConfig":"36"},{"size":264,"mtime":1615266147769,"results":"49","hashOfConfig":"36"},{"size":1040,"mtime":1615207729076,"results":"50","hashOfConfig":"36"},{"size":441,"mtime":1614948745821,"results":"51","hashOfConfig":"36"},{"size":5318,"mtime":1614752374114,"results":"52","hashOfConfig":"36"},{"size":3146,"mtime":1614752377670,"results":"53","hashOfConfig":"36"},{"size":237,"mtime":1614689693698,"results":"54","hashOfConfig":"36"},{"size":1504,"mtime":1614940986539,"results":"55","hashOfConfig":"36"},{"size":1236,"mtime":1615014674747,"results":"56","hashOfConfig":"36"},{"size":10093,"mtime":1614746875387,"results":"57","hashOfConfig":"36"},{"size":3702,"mtime":1614941555404,"results":"58","hashOfConfig":"36"},{"size":4115,"mtime":1615014058852,"results":"59","hashOfConfig":"36"},{"size":4087,"mtime":1615201995335,"results":"60","hashOfConfig":"36"},{"size":24619,"mtime":1614745598907,"results":"61","hashOfConfig":"36"},{"size":3109,"mtime":1615438183349,"results":"62","hashOfConfig":"36"},{"size":10820,"mtime":1615207752289,"results":"63","hashOfConfig":"36"},{"size":167,"mtime":1614746034768,"results":"64","hashOfConfig":"36"},{"size":155,"mtime":1614941064546,"results":"65","hashOfConfig":"36"},{"size":2916,"mtime":1614745807853,"results":"66","hashOfConfig":"36"},{"size":3789,"mtime":1614745767930,"results":"67","hashOfConfig":"36"},{"size":3247,"mtime":1615437714977,"results":"68","hashOfConfig":"36"},{"size":328,"mtime":1615266345483,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"91tqu0",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"72"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\xampp\\htdocs\\product\\client-react\\src\\index.js",[],["156","157"],"C:\\xampp\\htdocs\\product\\client-react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\App.js",["158"],"import React, {useEffect} from 'react'\nimport {Provider} from 'react-redux'\n\nimport jwt from \"jsonwebtoken\";\nimport './App.css';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport store from './redux/store'\nimport {logOut, setCurrentUser} from './redux'\nimport setAuthToken from './util.js/setAuthToken'\nimport Routes from './routes/routes'\n\nfunction App() {\n\n  useEffect(()=> {\n    const token=localStorage.getItem(\"jwtToken\")\n    if(token){\n      setAuthToken(token);\n     jwt.verify(token,'secret',function(err,decode){\n      if(err){\n        store.dispatch(setCurrentUser(null, false));\n      }else{\n        store.dispatch(setCurrentUser(decode, true));\n      }\n     });\n    }\n  },[])\n\n  return (\n\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes/>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </Provider>\n    </div>\n  );\n}\nexport default App;\n","C:\\xampp\\htdocs\\product\\client-react\\src\\component\\privateRoute.js",["159"],"import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, roles, ...rest}) => {\r\n    const Data = useSelector(state => state.auth)\r\n    console.log(Data)\r\n    const token =localStorage.getItem('jwtToken');\r\n    return <Route {...rest} component={(props) => {\r\n        if(Data.isLoggedIn){\r\n            const userType=Data.userdata.user.usertype\r\n            if (roles !== userType) {\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to={{ pathname: '/'}} />\r\n            }\r\n            else {\r\n                return <Component {...props} />\r\n            }\r\n        }else{\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n    }} />\r\n}\r\n\r\nexport default PrivateRoute;",["160","161"],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\store.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\authAction.js",["162","163"],"import {LOADING, REGISTER_USER, LOGIN_USER,SET_CURRENT_USER, LOGOUT_USER, ERROR} from './authType'\r\nimport { toast } from 'react-toastify';\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport setAuthToken from './../../util.js/setAuthToken'\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport const registerUser=(user)=>{\r\n     return(dispatch)=>{\r\n        dispatch({\r\n            type: LOADING,\r\n            payload: true\r\n        })\r\n        axios.post(\"http://localhost:8000/register\", user)\r\n        .then(res=>{\r\n            dispatch({\r\n                type: REGISTER_USER,\r\n                payload: res.data\r\n            })\r\n            toast.success(\"Register successfullly !\")\r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.response.data.message)\r\n        })\r\n        dispatch({\r\n            type: LOADING,\r\n            payload: false\r\n        })\r\n    } \r\n}\r\nexport const loginUser=(user)=>{\r\n    return async (dispatch)=>{\r\n        dispatch({\r\n            type: LOADING,\r\n            payload: true\r\n        })\r\n        axios.post(\"http://localhost:8000/login\", user)\r\n        .then(res=>{\r\n            const{user, token}=res.data\r\n            localStorage.setItem(\"user\",JSON.stringify(user));\r\n            localStorage.setItem(\"jwtToken\",token);\r\n                setAuthToken(token);\r\n                dispatch({\r\n                    type: LOGIN_USER,\r\n                    payload: {\r\n                        token\r\n                    }\r\n                })\r\n                dispatch(setCurrentUser(jwt.decode(token), true))\r\n                dispatch({\r\n                    type: LOADING,\r\n                    payload: false\r\n                })\r\n                toast.success(\"LogIn successfully !\")\r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.response.data.message)\r\n        })\r\n    }\r\n}\r\nexport const setCurrentUser=(user, loggedIn)=>{\r\n     return(dispatch)=>{\r\n            dispatch({\r\n                type: SET_CURRENT_USER,\r\n                payload: {user, loggedIn}\r\n            })\r\n    }\r\n}\r\nexport const logOut=()=>{\r\n    return(dispatch)=>{\r\n        localStorage.removeItem('jwtToken');\r\n        setAuthToken(false);\r\n         dispatch(setCurrentUser({}))\r\n        dispatch({\r\n            type: LOGOUT_USER\r\n        })\r\n        window.location.href=\"/login\";\r\n        toast.success(\"LogOut successfullly !\")\r\n    }\r\n}","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\authReducer.js",["164"],"import {REGISTER_USER, LOGIN_USER,SET_CURRENT_USER, LOGOUT_USER, ERROR} from './../action/authType'\r\nimport { toast } from \"react-toastify\";\r\nconst initialStage={\r\n    isLoggedIn:false,\r\n    token:null,\r\n    userdata:null,\r\n    error:{}\r\n}\r\nconst authReducer=(state=initialStage, action)=>{\r\n    switch(action.type){\r\n        case REGISTER_USER: return{\r\n            ...state,\r\n            user:action.payload\r\n        }\r\n        case LOGIN_USER: return{\r\n            ...state,\r\n             token:action.payload,\r\n             isLoggedIn:false\r\n        }\r\n        case SET_CURRENT_USER: return{\r\n            ...state,\r\n            userdata:action.payload.user,\r\n            isLoggedIn: action.payload.loggedIn\r\n        }\r\n        case LOGOUT_USER: return{\r\n            ...state,\r\n            isLoggedIn:false\r\n        }\r\n        case ERROR: return{\r\n            ...state,\r\n            error:action.payload\r\n        }\r\n        default: \r\n        return state\r\n    }\r\n}\r\nexport default authReducer","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\index.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\authType.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\userAction.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\userType.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\userReducer.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\categoryAction.js",["165"],"import {LOADING, ADD_CATEGORY, GETALL_CATEGORY,GET_CATEGORY, DELETE_CATEGORY, UPDATE_CATEGORY} from './categoryType'\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios'\r\nexport const addCategory=(category)=>{\r\n    return(dispatch)=>{\r\n       axios.post(\"http://localhost:8000/category/add\", category)\r\n       .then(res=>{\r\n             dispatch({\r\n               type: ADD_CATEGORY,\r\n               payload: res.data.result\r\n           })\r\n           toast.success(\"Added Successfully !\") \r\n       })\r\n       .catch(error=>{\r\n        toast.error(error.response.data.message)\r\n       })\r\n   } \r\n}\r\nexport const getAllCategory=()=>{\r\n    return(dispatch)=>{\r\n        axios.get(\"http://localhost:8000/category\")\r\n        .then(res=>{\r\n             dispatch({\r\n                type: GETALL_CATEGORY,\r\n                payload: res.data.result\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.response.data.message)\r\n        })\r\n    }\r\n}\r\nexport const getCategory=(catId)=>{\r\n    return(dispatch)=>{\r\n        axios.get(`http://localhost:8000/category/${catId}`)\r\n        .then(res=>{\r\n             dispatch({\r\n                type: GET_CATEGORY,\r\n                payload: res.data.result\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.response.data.message)\r\n        })\r\n    }\r\n}\r\nexport const updateCategory=(catId,category)=>{\r\n    return(dispatch)=>{\r\n        axios.put(`http://localhost:8000/category/update/${catId}`, category)\r\n        .then(res=>{\r\n             dispatch({\r\n                type: UPDATE_CATEGORY,\r\n                payload: res.data.result\r\n            })\r\n            toast.success(\"Updated Successfully !\") \r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.response.data.message)\r\n        })\r\n    }\r\n}\r\nexport const deleteCategory=(catId)=>{\r\n    return(dispatch)=>{\r\n        axios.delete(`http://localhost:8000/Category/delete/${catId}`)\r\n        .then(res=>{\r\n             dispatch({\r\n                type: DELETE_CATEGORY,\r\n                payload: res.data.result._id\r\n            })\r\n            toast.success(\"Deleted Successfully !\") \r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.response.data.message)\r\n        })\r\n    }\r\n}","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\action\\categoryType.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\categoryReducer.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\util.js\\setAuthToken.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\homepage\\home.js",["166","167"],"import React, {useRef} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport HeaderPage from './../shared/header'\r\nimport FooterPage from './../shared/footer'\r\nimport { Layout } from 'antd';\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        minHeight: \"100vh\",\r\n        width: \"100%\"\r\n    },\r\n    content : {\r\n      background:\"#fff\",\r\n      padding: \"40px\",\r\n      textAlign: \"justify\",\r\n    },\r\n    box :{\r\n        margin: \"20px\",\r\n        border: \"2px solid green\", \r\n        padding: \"60px\",\r\n    }\r\n}));\r\n\r\nexport default function HomePage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Layout className={classes.layout}>\r\n            <Header><HeaderPage/></Header>\r\n            <Content className={classes.content}>\r\n                <div className={classes.box} >\r\n                    <h3>Home</h3>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                    Aenean ut ligula consectetur, volutpat ligula ut, volutpat nisl. Quisque \r\n                    a mi lectus. Integer convallis velit eu nunc rhoncus interdum. Sed \r\n                    facilisis a enim ac blandit. Fusce pulvinar magna tellus, sed \r\n                    porttitor justo dignissim at. Donec commodo et massa eu posuere. \r\n                    Vestibulum et turpis sollicitudin, aliquet elit quis, ultrices nisi. \r\n                    Vestibulum id molestie quam. Sed vitae consequat eros. Donec finibus, \r\n                    odio at placerat rhoncus, tellus nisi dapibus neque, eu congue arcu diam et augue.\r\n                    Donec ut lorem pulvinar, accumsan neque eu, finibus elit. Etiam vel justo tincidunt, \r\n                    rutrum elit nec, varius ante. Donec tempus sem non purus posuere pretium. Donec eget \r\n                    fringilla turpis. Quisque gravida, turpis finibus commodo viverra, orci neque accumsan \r\n                    dui, id porta arcu augue molestie ipsum. Vivamus sed urna nec ex sollicitudin luctus. \r\n                    Fusce vel neque ullamcorper, venenatis purus laoreet, vehicula nulla. Lorem ipsum dolor sit amet, \r\n                    consectetur adipiscing elit. Duis vel euismod dolor.\r\n                </div>\r\n                <div className={classes.box} >\r\n                    <h3>About</h3>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                    Aenean ut ligula consectetur, volutpat ligula ut, volutpat nisl. Quisque \r\n                    a mi lectus. Integer convallis velit eu nunc rhoncus interdum. Sed \r\n                    facilisis a enim ac blandit. Fusce pulvinar magna tellus, sed \r\n                    porttitor justo dignissim at. Donec commodo et massa eu posuere. \r\n                    Vestibulum et turpis sollicitudin, aliquet elit quis, ultrices nisi. \r\n                    Vestibulum id molestie quam. Sed vitae consequat eros. Donec finibus, \r\n                    odio at placerat rhoncus, tellus nisi dapibus neque, eu congue arcu diam et augue.\r\n                    Donec ut lorem pulvinar, accumsan neque eu, finibus elit. Etiam vel justo tincidunt, \r\n                    rutrum elit nec, varius ante. Donec tempus sem non purus posuere pretium. Donec eget \r\n                    fringilla turpis. Quisque gravida, turpis finibus commodo viverra, orci neque accumsan \r\n                    dui, id porta arcu augue molestie ipsum. Vivamus sed urna nec ex sollicitudin luctus. \r\n                    Fusce vel neque ullamcorper, venenatis purus laoreet, vehicula nulla. Lorem ipsum dolor sit amet, \r\n                    consectetur adipiscing elit. Duis vel euismod dolor.\r\n                </div>\r\n                <div className={classes.box} >\r\n                    <h3>Contact</h3>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                    Aenean ut ligula consectetur, volutpat ligula ut, volutpat nisl. Quisque \r\n                    a mi lectus. Integer convallis velit eu nunc rhoncus interdum. Sed \r\n                    facilisis a enim ac blandit. Fusce pulvinar magna tellus, sed \r\n                    porttitor justo dignissim at. Donec commodo et massa eu posuere. \r\n                    Vestibulum et turpis sollicitudin, aliquet elit quis, ultrices nisi. \r\n                    Vestibulum id molestie quam. Sed vitae consequat eros. Donec finibus, \r\n                    odio at placerat rhoncus, tellus nisi dapibus neque, eu congue arcu diam et augue.\r\n                    Donec ut lorem pulvinar, accumsan neque eu, finibus elit. Etiam vel justo tincidunt, \r\n                    rutrum elit nec, varius ante. Donec tempus sem non purus posuere pretium. Donec eget \r\n                    fringilla turpis. Quisque gravida, turpis finibus commodo viverra, orci neque accumsan \r\n                    dui, id porta arcu augue molestie ipsum. Vivamus sed urna nec ex sollicitudin luctus. \r\n                    Fusce vel neque ullamcorper, venenatis purus laoreet, vehicula nulla. Lorem ipsum dolor sit amet, \r\n                    consectetur adipiscing elit. Duis vel euismod dolor.\r\n                </div>\r\n            </Content>\r\n            <Footer><FooterPage/></Footer>\r\n        </Layout>\r\n        </>\r\n    )\r\n}","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\shared\\header.js",["168","169","170","171","172"],"import React, {createRef} from 'react'\r\nimport {NavLink ,Link} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {logOut} from './../../redux/action/authAction'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar : {\r\n      background:\"#2dcaed\",\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      color: `green`,\r\n      fontWeight:\"600\",\r\n    },\r\n    linkText: {\r\n        textTransform: `uppercase`,\r\n        color: `white`,\r\n        fontWeight:\"600\"\r\n    }\r\n}));\r\n  \r\nexport default function HeaderPage() {\r\n    const classes = useStyles();\r\n    \r\n    const homeRef=createRef();\r\n    const aboutRef=createRef();\r\n    const contactRef=createRef();\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n    dispatch(logOut());\r\n  };\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" /* style={{background:\"#2dcaed\"}} */>\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              <Link to=\"/\">\r\n                E-commarce\r\n              </Link>\r\n            </Typography>\r\n            <Button>\r\n              <Link \r\n                to=\"/\" \r\n                activeclassname=\"active\" \r\n                className={classes.linkText}\r\n              >\r\n                Home\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link \r\n                to=\"/\" \r\n                activeclassname=\"active\" \r\n                className={classes.linkText}\r\n              >\r\n                About\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link \r\n                to=\"/\" \r\n                activeclassname=\"active\" \r\n                className={classes.linkText}\r\n              >\r\n                Contact\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link \r\n                to=\"/register\" \r\n                activeclassname=\"active\" \r\n                className={classes.linkText}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link \r\n                to=\"/login\" \r\n                activeclassname=\"active\" \r\n                className={classes.linkText}\r\n              >\r\n                Log In\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link \r\n                to=\"/\" \r\n                activeclassname=\"active\" \r\n                className={classes.linkText} \r\n                onClick={signOut}\r\n              >\r\n                Logout\r\n              </Link>\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\shared\\footer.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\routes\\routes.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\util.js\\privateRoute.js",["173"],"import React, {useEffect} from 'react';\r\nimport jwt from \"jsonwebtoken\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {setCurrentUser} from './../redux'\r\nconst PrivateRoute = ({component: Component, roles, ...rest}) => {\r\n    const dispatch=useDispatch()\r\n    useEffect(()=> {\r\n        const token=localStorage.getItem(\"jwtToken\")\r\n        if(token === null){\r\n            dispatch(setCurrentUser(null, false))\r\n        } else {\r\n            jwt.verify(token,'secret',function(err,decode){\r\n            if(err){\r\n                 dispatch(setCurrentUser(null, false))\r\n            }})\r\n        }\r\n      },[])\r\n\r\n    const Data = useSelector(state => state.auth)\r\n    return <Route {...rest} component={(props) => {\r\n        if(!Data.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }else{\r\n            const userType=Data.userdata?.user?.usertype\r\n            if (roles !== userType) {\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to=\"/\"/>\r\n            }\r\n            else {\r\n                return <Component {...props} />\r\n            }\r\n        }\r\n    }} />\r\n}\r\n\r\nexport default PrivateRoute;","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\register\\register.js",["174","175","176"],"import React, {useState} from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport {registerUser} from './../../redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n// yup validation schema ..............\r\nconst validationSchema = Yup.object().shape({\r\n  fname: Yup.string()\r\n    .required(\"First Name is required\"),\r\n  mname: Yup.string()\r\n    .required(\"Middle is required\"),\r\n  lname: Yup.string()\r\n  .required(\"Last Name is required\"),\r\n  email: Yup.string()\r\n    .required(\"Email is required\")\r\n    .email('Email is invalid'),\r\n  password: Yup.string()\r\n  .required(\"Password is required\"),\r\n  cpassword : Yup.string()\r\n  .required(\"Confirm password is required\")\r\n  .oneOf([Yup.ref('password'), null], 'Passwords must match'), \r\n  gender : Yup.string()\r\n  .required(\"Gender is required\"),\r\n  address: Yup.string()\r\n    .required(\"Address is required\"),\r\n  state: Yup.string()\r\n.required(\"State is required\"),\r\n  city: Yup.string()\r\n  .required(\"City is required\"),\r\n  zip: Yup.string()\r\n  .required(\"Zip is required\")\r\n  .matches(/^[0-9]/,\"Zip must be number\")\r\n})\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const dispatch=useDispatch()\r\n  const userdata = useSelector(state => state.auth)\r\n//......validation ........//\r\nconst { handleSubmit,handleChange, handleBlur, values, errors, touched } = useFormik({\r\n  initialValues : {\r\n      fname: \"\",\r\n      mname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      cpassword: \"\",\r\n      address: \"\",\r\n      gender:\"\",\r\n      state: \"\",\r\n      city: \"\",\r\n      zip: \"\",\r\n      },\r\n      validationSchema,\r\n      onSubmit(values){\r\n        dispatch(registerUser(values));\r\n      }\r\n});\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xl\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n         Registration form\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                name=\"fname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"fname\"\r\n                label=\"First Name\"\r\n                value={values.fname}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.fname && touched.fname ? true : false}\r\n                helperText={errors.fname && touched.fname ? errors.fname : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"mname\"\r\n                label=\"Middle Name\"\r\n                name=\"mname\"\r\n                value={values.mname}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.mname && touched.mname ? true : false}\r\n                helperText={errors.mname && touched.mname ? errors.mname : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lname\"\r\n                label=\"Last Name\"\r\n                name=\"lname\"\r\n                value={values.lname}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.lname && touched.lname ? true : false}\r\n                helperText={errors.lname && touched.lname ? errors.lname : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.email && touched.email ? true : false}\r\n                helperText={errors.email && touched.email ? errors.email : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.password && touched.password ? true : false}\r\n                helperText={errors.password && touched.password ? errors.password : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"cpassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"cpassword\"\r\n                id=\"cpassword\"\r\n                value={values.cpassword}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.cpassword && touched.cpassword ? true : false}\r\n                helperText={errors.cpassword && touched.cpassword ? errors.cpassword : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n              <TextField\r\n                name=\"address\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"address\"\r\n                label=\"Address\"\r\n                value={values.address}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.address && touched.address ? true : false}\r\n                helperText={errors.address && touched.address ? errors.address : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n                <RadioGroup row aria-label=\"Gender\" name=\"gender\" value={values.gender} >\r\n                <FormControlLabel value=\"Male\" control={<Radio color=\"primary\"/>} label=\"Male\" \r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                />\r\n                <FormControlLabel value=\"Female\" control={<Radio color=\"primary\"/>} label=\"Female\" \r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                />\r\n                </RadioGroup>\r\n                <FormHelperText style={{color:\"red\"}}>{errors.gender && touched.gender ? errors.gender : null}</FormHelperText>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"state\"\r\n                label=\"State\"\r\n                name=\"state\"\r\n                value={values.state}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.state && touched.state ? true : false}\r\n                helperText={errors.state && touched.state ? errors.state : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"city\"\r\n                label=\"City\"\r\n                name=\"city\"\r\n                value={values.city}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.city && touched.city ? true : false}\r\n                helperText={errors.city && touched.city ? errors.city : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                name=\"zip\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"zip\"\r\n                label=\"Zip\"\r\n                value={values.zip}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.zip && touched.zip ? true : false}\r\n                helperText={errors.zip && touched.zip ? errors.zip : null}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            \r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\layout.js",["177","178"],"import React from 'react';\r\nimport { Switch, Route} from 'react-router-dom'\r\nimport PrivateRoute from './../../util.js/privateRoute'\r\nimport AdminDashbaord from './dashbaord'\r\nimport Product from './product'\r\nimport SingleImageUploadComponent from './signle_upload'\r\nimport MultipleImageUploadComponent from './multi_upload'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {NavLink ,Link} from 'react-router-dom'\r\nconst drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      height: \"100vh\"\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport default function AdminLayout() {\r\n  const classes = useStyles();\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Admin dashboard\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          anchor=\"left\"\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <Divider />\r\n          <List>\r\n              <ListItem >\r\n              <NavLink  exact to=\"/admin\" canactiveclass=\"active\" className={classes.linkText}><ListItemText primary=\"Dashboard\"/></NavLink>\r\n              </ListItem>\r\n          </List>\r\n          <List>\r\n              <ListItem >\r\n              <NavLink  to=\"/admin/product\" canactiveclass=\"active\" className={classes.linkText}><ListItemText primary=\"Product\"/></NavLink>\r\n              </ListItem>\r\n          </List>\r\n          <List>\r\n              <ListItem >\r\n              <NavLink  to=\"/admin/multiple_upload\" canactiveclass=\"active\" className={classes.linkText}><ListItemText primary=\"Multi Upload\"/></NavLink>\r\n              </ListItem>\r\n          </List>\r\n          <List>\r\n              <ListItem >\r\n              <NavLink  to=\"/admin/single_upload\" canactiveclass=\"active\" className={classes.linkText}><ListItemText primary=\"Single Upload\"/></NavLink>\r\n              </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/admin\" roles={\"2\"} component={AdminDashbaord}/>\r\n            <PrivateRoute exact path=\"/admin/product\" roles={\"2\"} component={Product}/>\r\n            <PrivateRoute exact path=\"/admin/multiple_upload\" roles={\"2\"} component={MultipleImageUploadComponent}/>\r\n            <PrivateRoute exact path=\"/admin/single_upload\" roles={\"2\"} component={SingleImageUploadComponent}/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    )\r\n  }","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\login\\login.js",["179","180"],"import React , {useState} from 'react'\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport {loginUser, setCurrentUser} from './../../redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n//validation\r\n const validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n      .required('Email is required')\r\n      .email('Email is invalid'),\r\n  password: Yup.string()\r\n      .required('Password is required'),\r\n});\r\n//validation close\r\n\r\nexport default function Login() {\r\n  const classes = useStyles(); //use style in ui\r\n  //set name field\r\n  const Data = useSelector(state => state.auth)\r\n  const history=useHistory()\r\n  const dispatch=useDispatch() \r\n  const { handleSubmit, handleChange, handleBlur, values, errors, touched } = useFormik({\r\n    initialValues : {\r\n        email: \"\",\r\n        password: \"\"\r\n    },\r\n      validationSchema,\r\n      onSubmit(values, e){\r\n       // e.preventDefault()\r\n        dispatch(loginUser(values))\r\n      }\r\n});\r\nif(Data.isLoggedIn){\r\n  if(Data.userdata.user.usertype === \"1\"){\r\n    history.push(`/superadmin`)\r\n  }\r\n  else if(Data.userdata.user.usertype === \"2\"){\r\n    history.push(`/admin`)\r\n  }\r\n}\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n         Log In Form\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n          <Typography component=\"h4\" variant=\"h4\" style={{color:\"red\"}}>\r\n          {Data.error.message}\r\n          </Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.email && touched.email ? true : false}\r\n                helperText={errors.email && touched.email ? errors.email : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                values=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.password && touched.password ? true : false}\r\n                helperText={errors.password && touched.password ? errors.password :null}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n              Log In\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                Not have account? Register\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\layout.js",["181","182","183"],"import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport { Switch, Route, Link, useHistory} from 'react-router-dom'\r\nimport PrivateRoute from './../../util.js/privateRoute'\r\nimport SuperAdminDashbaord from './dashbaord'\r\nimport AllUser from './alluser'\r\nimport UserProfile from './profile'\r\nimport Category from './category'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {logOut} from './../../redux'\r\nconst drawerWidth = 200;\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      marginLeft: '20px',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: \"#cbd4b4\"\r\n    },\r\n    linkText: {\r\n      color: \"solid Black\",\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport default function SuperAdminLayout() {\r\n  const classes = useStyles();\r\n  const history=useHistory()\r\n  const dispatch = useDispatch()\r\n  const signOut = () => {\r\n    dispatch(logOut());\r\n  };\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Super Admin dashboard\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          anchor=\"left\"\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <Divider />\r\n          <List >\r\n              <ListItem button className={classes.linkText} onClick={()=>history.push(\"/superadmin\")}>\r\n              <ListItemText primary=\"Dashboard\"/>\r\n              </ListItem>\r\n          </List>\r\n          <List>\r\n              <ListItem button className={classes.linkText} onClick={()=>history.push(\"/superadmin/users\")}>\r\n              <ListItemText primary=\"All User\"/>\r\n              </ListItem>\r\n          </List>\r\n          <List>\r\n              <ListItem button className={classes.linkText} onClick={()=>history.push(\"/superadmin/category\")}>\r\n              <ListItemText primary=\"Category\"/>\r\n              </ListItem>\r\n          </List>\r\n          <List>\r\n              <ListItem button className={classes.linkText} onClick={()=>history.push(\"/superadmin/users\")}>\r\n              <ListItemText primary=\"extra\"/>\r\n              </ListItem>\r\n          </List>\r\n          <Divider/>\r\n          <List>\r\n              <ListItem button className={classes.linkText} onClick={()=>history.push(\"/login\")}>\r\n              <ListItemText primary=\"Log Out\"/>\r\n              </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar}/>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/superadmin\" roles={\"1\"} component={SuperAdminDashbaord}/>\r\n            <PrivateRoute exact path=\"/superadmin/users\" roles={\"1\"} component={AllUser}/>\r\n            <PrivateRoute exact path=\"/superadmin/users/:userId\" roles={\"1\"} component={UserProfile}/>\r\n            <PrivateRoute exact path=\"/superadmin/category\" roles={\"1\"} component={Category}/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    )\r\n  }","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\product.js",["184","185","186","187","188","189"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport {getAllCategory} from './../../redux'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// yup validation schema ..............\r\n    const FILE_SIZE = 10000;\r\n    const SUPPORTED_FORMATS = [\r\n      \"image/jpg\",\r\n      \"image/jpeg\",\r\n      \"image/gif\",\r\n      \"image/png\"\r\n  ];\r\n  const validationSchema = Yup.object().shape({\r\n    category: Yup.string()\r\n      .required(\"Category is required\"),\r\n    name: Yup.string()\r\n      .required(\"Name is required\"),\r\n    price: Yup.string()\r\n      .required(\"Price is required\")\r\n      .matches(/^[0-9]/,\"Price must be number\"),\r\n    offer: Yup.string()\r\n    .required(\"Offer is required\")\r\n    .matches(/^[0-9]/,\"Offer must be number\"),\r\n    quantity : Yup.string()\r\n    .required(\"Quantity is required\")\r\n    .matches(/^[0-9]/,\"Quantity must be number\"),\r\n    des: Yup.string()\r\n      .required(\"Description is required\")\r\n      .min(30,\"At least 30 Character\")\r\n    /* .test(\r\n      \"fileSize\",\r\n      \"File too large\",\r\n      values => values && values.size <= FILE_SIZE\r\n    ) */\r\n    /* .test(\r\n      \"fileFormat\",\r\n      \"Unsupported Format\",\r\n      values => {\r\n        for(let i=0; i<values; i++) {\r\n          values[i] && SUPPORTED_FORMATS.includes(values[i].type)\r\n        }\r\n      }\r\n    ) */\r\n  })\r\n\r\nexport default function Product() {\r\n  var ffl=[];\r\n  var img=[];\r\n  const [indx, setIndx]=useState([0]);\r\n    const [editfileshow, setEditfileshow] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    const [imgShow, setImgShow] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [imgurl, setImgUrl] = useState(\"\");\r\n\r\n    //....................declare initial value..................\r\n    const [initialValues, setInitialValues] = useState({\r\n      category: \"\",\r\n      name: \"\",\r\n      price: \"\",\r\n      offer: \"\",\r\n      quantity: \"\",\r\n      des: \"\",\r\n    });\r\n\r\n    /* ......................modal open handle................ */\r\n    const handleClose = () => {\r\n      setShow(false) \r\n      setInitialValues({})\r\n      setFiles([])\r\n      setImgShow([]);\r\n      setEditfileshow([])\r\n      ffl=[];\r\n      img=[];\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n//.... get dropdown data............................\r\n    const Data = useSelector(state => state.category)\r\n      const dispatch=useDispatch()\r\n      useEffect(() => {\r\n        dispatch(getAllCategory());\r\n      },[]);\r\n\r\n//.................image handle ..................................\r\n\r\n  const handleImageChange=(e) =>{\r\n    var fileObj = []\r\n    fileObj.push(e.target.files)\r\n    for (let i = 0; i < fileObj[0].length; i++) {\r\n      ffl.push(fileObj[0][i])\r\n      img.push(URL.createObjectURL(fileObj[0][i]))  \r\n    }\r\n    setFiles(files.concat(ffl))\r\n    setImgShow(imgShow.concat(img))\r\n  }\r\n\r\n    //................... multi image delete...................\r\n  function deleteFiles(e) {\r\n    const editfile = editfileshow.filter((item, index) => item !== e);\r\n    const filedata = files.filter((item, index) => index !== e);\r\n    const fileurl = imgShow.filter((item, index) => item !== e);\r\n    setEditfileshow(editfile)\r\n    setFiles(filedata)\r\n    setImgShow(fileurl)\r\n  }\r\n  console.log(\" deletecase\", files)\r\n//............ edit handle ......................\r\n  const handleEdit=(data)=>{\r\n    setEdit(true);\r\n    setEditfileshow(data.images)\r\n    setFiles(data.images)\r\n    setImgShow([]);\r\n    handleShow();\r\n    setInitialValues(data)\r\n  }\r\n  console.log(files)\r\n // .......... delete by api ........... \r\n  const handleDelete=(data)=>{\r\n    axios.post('http://localhost:8000/product/delete'+data._id, data._id)\r\n      .then(res=>{\r\n        console.log(\"delete\")\r\n      })\r\n      .catch(error=>{\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n\r\n//....................formik ..... ........//\r\n  const { handleSubmit,handleChange, setFieldValue, resetForm, values, errors, touched} = useFormik({\r\n    initialValues:initialValues,\r\n    enableReinitialize:true , \r\n    validationSchema, \r\n    onSubmit(values, e){\r\n    // e.preventDefault()\r\n      const formData = new FormData();\r\n      for ( let key in  values) {\r\n          formData.append(key, values[key]);\r\n      } \r\n      for (let i=0; i<files.length; i++) {\r\n        formData.append(\"image\", files[i]);\r\n      }\r\n\r\n      axios.post('http://localhost:8000/product/add', formData)\r\n      .then(res=>{\r\n        setList([...list, res.data.result])\r\n      })\r\n      .catch(error=>{\r\n        console.log(error)\r\n      })\r\n      handleClose();\r\n      resetForm({})\r\n    }\r\n  });\r\n\r\n  //............ api for get data...............................\r\n      useEffect(() => {\r\n        axios.get('http://localhost:8000/product')\r\n        .then(res=>{\r\n          console.log(res.data.result)\r\n          setList(res.data.result)\r\n          const url=\"http://localhost:8000/image/\"\r\n          setImgUrl(url)\r\n        })\r\n        .catch(error=>{\r\n          console.log(error)\r\n        })\r\n      }, []);\r\n\r\nreturn (\r\n    <div className=\"container pt-3\">\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-success\" onClick={handleShow}><strong>+</strong> ADD PRODUCT</button>\r\n        </div>\r\n\r\n        {/* ...........Model ................ */}\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          size=\"sm\"\r\n        >\r\n          <form  onSubmit={handleSubmit} > \r\n          <Modal.Header closeButton className=\"bg-success\">\r\n          <Modal.Title >Add New Product</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body >\r\n              <div className=\"form-row\">\r\n                  <div className=\"form-group col-sm-12\">\r\n                  <label>Category</label>\r\n                  <select name=\"category\" \r\n                  className={`custom-select custom-select-lg mb-3 ${errors.category && touched.category ? 'invalid' : ''}`}\r\n                  value={values.category}\r\n                  onChange={handleChange}\r\n                  >\r\n                  <option></option>\r\n                      {\r\n                          Data.catData.map((item, i)=>(\r\n                              <option key={i}>{item.cat_name}</option>\r\n                          ))\r\n                      }\r\n                  </select>\r\n                  { errors.category && touched.category ?<span style={{color:\"red\"}}>{errors.category}</span>:null}\r\n                  </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                  <div className=\"form-group col-sm-6\">\r\n                  <label>Product Name</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  name=\"name\"  \r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  className={`form-control ${errors.name && touched.name ? 'invalid' : ''}`}\r\n                  />\r\n                  { errors.name && touched.name ?<span style={{color:\"red\"}}>{errors.name}</span>:null}\r\n                  </div>\r\n                  <div className=\"form-group col-sm-6\">\r\n                  <label>Price</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  name=\"price\"  \r\n                  className={`form-control ${errors.price && touched.price ? 'invalid' : ''}`}\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  \r\n                  />\r\n                  { errors.price && touched.price ?<span style={{color:\"red\"}}>{errors.price}</span>:null}\r\n                  </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                  <div className=\"form-group col-sm-6\">\r\n                  <label>Offer</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  name=\"offer\"  \r\n                  className={`form-control ${errors.offer && touched.offer ? 'invalid' : ''}`}\r\n                  value={values.offer}\r\n                  onChange={handleChange}\r\n                  \r\n                  />\r\n                  { errors.offer && touched.offer ?<span style={{color:\"red\"}}>{errors.offer}</span>:null}\r\n                  </div>\r\n                  <div className=\"form-group col-sm-6\">\r\n                  <label>Quantity</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  name=\"quantity\"  \r\n                  className={`form-control ${errors.quantity && touched.quantity ? 'invalid' : ''}`}\r\n                  value={values.quantity}\r\n                  onChange={handleChange}\r\n                  \r\n                  />\r\n                  { errors.quantity && touched.quantity ?<span style={{color:\"red\"}}>{errors.quantity}</span>:null}\r\n                  </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                  <div className=\"form-group col-sm-12\">\r\n                  <label>Description</label>\r\n                  <textarea name=\"des\" \r\n                  className={`form-control ${errors.des && touched.des ? 'invalid' : ''}`}\r\n                  value={values.des}\r\n                  onChange={handleChange}\r\n                  ></textarea>\r\n                  { errors.des && touched.des ?<span style={{color:\"red\"}}>{errors.des}</span>:null}\r\n                  </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                  <div className=\"form-group col-sm-12\">\r\n                  <label className=\"custom-file-label\"/* {`custom-file-label ${errors.image && touched.image ? 'invalid' : ''}`} */>upload</label>\r\n                  <input type=\"file\" \r\n                  name=\"image\" \r\n                  multiple\r\n                  className=\"custom-file-input\"\r\n                    /* onChange={(e) => {\r\n                    setFieldValue('image', e.target.files);\r\n                    setFiles(e.target.files);\r\n                  }} */\r\n                  onChange={(e)=>handleImageChange(e)}\r\n                  />\r\n                  {/* { errors.image && touched.image ?<span style={{color:\"red\"}}>{errors.image}</span>:null} */}\r\n                  </div>\r\n                  \r\n              </div>\r\n              <div className=\"form-row\">\r\n              <div className=\"form-group col-sm-12\" style={{display: \"flex\"}}>\r\n                {edit && editfileshow.length > 0 &&\r\n                editfileshow.map((item, index) => (\r\n                    <div key={item} className=\"img_show\">\r\n                      {\r\n                        setIndx(index+indx)\r\n                      }\r\n                        <span id=\"close\" onClick={() => deleteFiles(indx)}>X</span>\r\n                        <img src={`${imgurl}${item.filename}`} alt=\"\" width=\"50px\" height=\"50px\"/>\r\n                    </div>\r\n                ))}\r\n                {imgShow.length > 0 &&\r\n                imgShow.map((item, index) => (\r\n                    <div key={item} className=\"img_show\">\r\n                      {\r\n                        setIndx(index+indx)\r\n                      }\r\n                        <span id=\"close\" onClick={() => deleteFiles(indx)}>X</span>\r\n                        <img src={item} alt=\"\" width=\"50px\" height=\"50px\"/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n              {/* {img.length > 0 && img.map((value)=> (\r\n                <div style={{display: \"flex\"}}>\r\n                    <img src={value} width=\"30\" height=\"30\"/>\r\n                </div>\r\n              ))} */}\r\n              </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"success\">ADD</Button>\r\n          </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n    {/* ...........Model ................ */}\r\n\r\n        {/* ...... product show./.......... */}\r\n      <table className=\"tbl\">\r\n          <thead>\r\n              <tr>\r\n                <td>S. No.</td>\r\n                <td>Product name</td>\r\n                <td>Category</td>\r\n                <td>Price</td>\r\n                <td>Quantity</td>\r\n                <td>Offer</td>\r\n                <td>Image</td>\r\n                <td colSpan=\"2\">Action</td>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              list.map((item,i)=>(\r\n                <tr key={i}>\r\n                <td >{i+1}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.category}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.offer}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>\r\n                {\r\n                  item.images.map((img,i)=>(\r\n                    <span key={i}><img src={`${imgurl}${img.filename}`} width=\"40px\" height=\"40px\"/></span>\r\n                  ))\r\n                }\r\n                </td>\r\n                <td >Delete</td>\r\n                <td onClick={()=>handleEdit(item)}>Edit</td>\r\n              </tr>\r\n              ))\r\n            }\r\n          </tbody>\r\n      </table>     \r\n  </div>\r\n);\r\n\r\n\r\n\r\n// function validateData(values) {\r\n//   var errors= {};\r\n//   if (!values?.category) {\r\n//       errors.category = \"category Required\";\r\n//   }\r\n//   if (!values?.name) {\r\n//       errors.name = \"name Required\";\r\n//   }\r\n//   if (!values?.price) {\r\n//       errors.price = \"price Required\";\r\n//   }\r\n//   if (!values?.offer) {\r\n//       errors.offer = \"offer Required\";\r\n//   }\r\n//   if (!values?.quantity) {\r\n//       errors.quantity = \"quantity Required\";\r\n//   }\r\n//   if (!values?.des) {\r\n//       errors.des = \"des Required\";\r\n//   }\r\n//   if (!values?.image) {\r\n//     errors.image = \"image Required\";\r\n// }\r\n//   return errors;\r\n// }\r\n\r\n//     const [show, setShow] = useState(false);\r\n//     const [list, setList] = useState([]);\r\n//     const [imgurl, setImgUrl] = useState(\"\");\r\n//     const handleClose = () => {\r\n//       setShow(false) \r\n//     };\r\n//     const handleShow = () => {\r\n//       setShow(true)\r\n//     };\r\n//     const [files, setFiles] = useState(\"\");\r\n//     const [selectedValue, setSelectedValue] = React.useState({});\r\n//     const [values, setValues] = useState(selectedValue);\r\n//     const [errors, setErrors] = useState({ selected: undefined });\r\n//     const [formValidate, setSubmitting] = React.useState({\r\n//       isSubmitting: false,\r\n//       error: undefined,\r\n//     });\r\n//     React.useEffect(() => {\r\n//       const validationErrors = validateData(values);\r\n//       let noErrors = Object.keys(validationErrors).length == 0;\r\n//       let currentError = validationErrors[errors.selected];\r\n//       setSubmitting({ isSubmitting: noErrors, error: currentError });\r\n//   }, [errors]);\r\n//   React.useEffect(() => {\r\n//       const validationErrors = validateData(selectedValue);\r\n//       let noErrors = Object.keys(validationErrors).length == 0;\r\n//       let currentError = validationErrors[errors.selected];\r\n//       setValues({\r\n//           ...selectedValue,\r\n//       });\r\n//       setSubmitting({ isSubmitting: noErrors, error: currentError });\r\n//   }, [selectedValue]);\r\n// //.... get dropdown data.........\r\n// const dispatch=useDispatch()\r\n// const Data = useSelector(state => state.category)\r\n\r\n// const handleChange = (event) => {\r\n//   setValues({\r\n//       ...values,\r\n//       [event?.target.name]: event?.target.value,\r\n//   });\r\n//   setErrors({ ...errors, selected: event?.target.name });\r\n// };\r\n\r\n// const handleImageChange=(e)=>{\r\n//   setFiles(e.target.files)\r\n//   setValues({\r\n//     ...values,\r\n//     [\"image\"]: files,\r\n// });\r\n// setErrors({ ...errors, selected: \"image\" });\r\n// }\r\n\r\n//   const handleEdit=(data)=>{\r\n//     setSelectedValue(data)\r\n//     handleShow();\r\n    \r\n//   }\r\n\r\n//   const handleSubmit = (e) => {\r\n//       e.preventDefault();\r\n//     if (formValidate.isSubmitting) {\r\n//         let userdata = values;\r\n//         console.log(userdata)\r\n//       //  setShow(false)\r\n//     }\r\n// };\r\n// console.log(\"fggf\", files)\r\n// console.log(errors)\r\n// useEffect(() => {\r\n//   axios.get('http://localhost:8000/product')\r\n//       .then(res=>{\r\n//         console.log(res.data.result)\r\n//         setList(res.data.result)\r\n//         const url=\"http://localhost:8000/image/\"\r\n//         setImgUrl(url)\r\n//       })\r\n//       .catch(error=>{\r\n//         console.log(error)\r\n//       })\r\n//       dispatch(getAllCategory());\r\n// }, []);\r\n\r\n// return (\r\n//     <div className=\"container pt-3\">\r\n//         <div className=\"text-center\"><button className=\"btn btn-success\" onClick={handleShow}><strong>+</strong> ADD PRODUCT</button></div>\r\n//         {/* ...........Model ................ */}\r\n//             <Modal\r\n//             show={show}\r\n//             onHide={handleClose}\r\n//             backdrop=\"static\"\r\n//             keyboard={false}\r\n//             size=\"sm\"\r\n//             >\r\n//             <form > \r\n//             <Modal.Header closeButton className=\"bg-success\">\r\n//             <Modal.Title >Add New Product</Modal.Title>\r\n//             </Modal.Header>\r\n//             <Modal.Body >\r\n//                 <div className=\"form-row\">\r\n//                     <div className=\"form-group col-sm-12\">\r\n//                     <label>Category</label>\r\n//                     <select name=\"category\" \r\n//                     className={`custom-select custom-select-lg mb-3 '}`}\r\n//                     onChange={(input) => handleChange(input)}\r\n//                     value={values.category}\r\n//                     >\r\n//                     <option></option>\r\n//                         {\r\n//                             Data.catData.map((item, i)=>(\r\n//                                 <option key={i}>{item.cat_name}</option>\r\n//                             ))\r\n//                         }\r\n//                     </select>\r\n//                     {\r\n//                       errors?.selected == \"category\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"form-row\">\r\n//                     <div className=\"form-group col-sm-6\">\r\n//                     <label>Product Name</label>\r\n//                     <input \r\n//                      className={`form-control `}\r\n//                     type=\"text\" \r\n//                     name=\"name\"  \r\n//                     onChange={(input) => handleChange(input)}\r\n//                     value={values.name}\r\n                    \r\n//                     />\r\n//                     {\r\n//                       errors?.selected == \"name\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                     </div>\r\n//                     <div className=\"form-group col-sm-6\">\r\n//                     <label>Price</label>\r\n//                     <input \r\n//                     type=\"text\" \r\n//                     name=\"price\"  \r\n//                     className={`form-control `}\r\n//                     onChange={(input) => handleChange(input)}\r\n//                     value={values.price}\r\n                    \r\n//                     />\r\n//                     {\r\n//                       errors?.selected == \"price\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"form-row\">\r\n//                     <div className=\"form-group col-sm-6\">\r\n//                     <label>Offer</label>\r\n//                     <input \r\n//                     type=\"text\" \r\n//                     name=\"offer\"  \r\n//                     className={'form-control'}\r\n//                     onChange={(input) => handleChange(input)}\r\n//                     value={values.offer}\r\n                    \r\n//                     />\r\n//                     {\r\n//                       errors?.selected == \"offer\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                     </div>\r\n//                     <div className=\"form-group col-sm-6\">\r\n//                     <label>Quantity</label>\r\n//                     <input \r\n//                     type=\"text\" \r\n//                     name=\"quantity\"  \r\n//                     className={`form-control `}\r\n//                     onChange={(input) => handleChange(input)}\r\n//                     value={values.quantity}\r\n                    \r\n//                     />\r\n//                    {\r\n//                       errors?.selected == \"quantity\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"form-row\">\r\n//                     <div className=\"form-group col-sm-12\">\r\n//                     <label>Description</label>\r\n//                     <textarea name=\"des\" \r\n//                     className={`form-control `}\r\n//                     onChange={(input) => handleChange(input)}\r\n//                     value={values.des}\r\n//                     ></textarea>\r\n//                     {\r\n//                       errors?.selected == \"des\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"form-row\">\r\n//                     <div className=\"form-group col-sm-12\">\r\n//                     <label className={`custom-file-label`}>upload</label>\r\n//                     <input type=\"file\" \r\n//                     name=\"image\" \r\n//                     multiple\r\n//                     className=\"custom-file-input\"\r\n//                     onChange={handleImageChange}\r\n//                     />\r\n//                     </div>\r\n//                     {\r\n//                       errors?.selected == \"image\"\r\n//                         ? <span style={{color: \"red\"}}>{formValidate?.error}</span>\r\n//                         : \"\"\r\n//                     }\r\n//                 </div>\r\n//             </Modal.Body>\r\n//             <Modal.Footer>\r\n//             <Button variant=\"secondary\" onClick={handleClose}>\r\n//                 Close\r\n//             </Button>\r\n//             <Button type=\"submit\" onClick={handleSubmit} variant=\"success\"\r\n//               disabled={!formValidate.isSubmitting}\r\n//             >ADD</Button>\r\n//             </Modal.Footer>\r\n//             </form>\r\n//         </Modal>\r\n//     {/* ...........Model ................ */}\r\n\r\n//  {/* ...... product show./.......... */}\r\n//           <table className=\"tbl\">\r\n//               <thead>\r\n//                   <tr>\r\n//                     <td>S. No.</td>\r\n//                     <td>Product name</td>\r\n//                     <td>Category</td>\r\n//                     <td>Price</td>\r\n//                     <td>Quantity</td>\r\n//                     <td>Offer</td>\r\n//                     <td>Image</td>\r\n//                     <td colSpan=\"2\">Action</td>\r\n//                   </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {\r\n//                   list.map((item,i)=>(\r\n//                     <tr key={i}>\r\n//                     <td >{i+1}</td>\r\n//                     <td>{item.name}</td>\r\n//                     <td>{item.category}</td>\r\n//                     <td>{item.price}</td>\r\n//                     <td>{item.offer}</td>\r\n//                     <td>{item.quantity}</td>\r\n//                     <td>\r\n//                     {\r\n//                       item.images.map((img,i)=>(\r\n//                         <span key={i}><img src={`${imgurl}${img.filename}`} width=\"40px\" height=\"40px\"/></span>\r\n//                       ))\r\n//                     }\r\n//                     </td>\r\n//                     <td >Delete</td>\r\n//                     <td onClick={()=>handleEdit(item)}>Edit</td>\r\n//                   </tr>\r\n//                   ))\r\n//                 }\r\n//               </tbody>\r\n//           </table>     \r\n//       </div>\r\n// );\r\n }\r\n","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\profile.js",["190","191"],"import React, {useEffect}from 'react';\r\nimport {useParams, useHistory, useLocation}from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { getUSER } from './../../redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding :'30px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: '#E91E63',\r\n    backgroundColor: '#dbc1e0',\r\n    border: '1px solid blue',\r\n    margin:'auto'\r\n  },\r\n  heading: {\r\n    padding: '10px',\r\n    color: 'green',\r\n    textAlign: \"center\",\r\n  }\r\n}));\r\n\r\nexport default function UserProfile() {\r\n    const classes = useStyles();\r\n    const Data = useSelector(state => state.user.userId)\r\n    const id=useParams();\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const location=useLocation()\r\n    console.log(\"ttt\",location)\r\n    useEffect(() => {\r\n      dispatch(getUSER(id.userId));\r\n    },[]);\r\n    return (\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" className={classes.heading}>\r\n            User Profile\r\n          </Typography>\r\n          <Grid container spacing={0} xs={12}>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>Name</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>{Data.fname} {Data.mname} {Data.lname}</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>Email</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>{Data.email}</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>Address</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>{Data.address}</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>Gender</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>{Data.gender}</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>State</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>{Data.state}</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>City</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>{Data.city}</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>Zip</Paper>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <Paper className={classes.paper}>{Data.zip}</Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )\r\n}\r\n","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\category.js",["192","193","194","195","196"],"import React, {useState ,useEffect} from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {getAllCategory, addCategory, getCategory, deleteCategory, updateCategory } from './../../redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  Typography: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    textTranseform: \"uppercase\"\r\n  },\r\n  editIcon: {\r\n    color: \"blue\"\r\n  },\r\n  deleteIcon: {\r\n    color: \"#ef2a4e\"\r\n  },\r\n  heading: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: 600,\r\n    textAlign: 'center',\r\n    padding:theme.spacing(2),\r\n    backgroundColor: \"skyBlue\",\r\n    border: \"1px solid tomato\",\r\n    borderCollapse: \"collapse\"\r\n  },\r\n  head: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: 600,\r\n    textAlign: 'center',\r\n    padding:theme.spacing(2),\r\n    backgroundColor: \"#9c9695\",\r\n    border: \"1px solid tomato\",\r\n    borderCollapse: \"collapse\"\r\n  },\r\n  \r\n\r\n}));\r\n\r\nexport default function Category() {\r\n  const classes = useStyles();\r\nconst [editId, setEditId]= useState(0)\r\nconst [name,setName]= useState({cat_name:\"\"})\r\nconst [show, setShow] = useState(false);\r\n\r\n// modal open close .........................\r\n  const handleClose = () => {\r\n    setShow(false)\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const dispatch=useDispatch()\r\n  const Data = useSelector( state => state.category)\r\n// all data get for table ........................\r\n   useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  },[]);\r\n// edit data .........................\r\n  const editData=(id)=>{\r\n   // dispatch(getCategory(id))\r\n   setEditId(id)\r\n    const editdata=Data.catData.find((post) => (post._id === id ?  post: null))\r\n    handleShow()\r\n     setName({...name,\r\n      ['cat_name']:editdata.cat_name\r\n    })\r\n  }\r\n// on change value set .........................\r\n  const changeHandle=(e)=> {\r\n    setName({...name,\r\n        [e.target.name]:e.target.value\r\n    })\r\n  }\r\n// submit.................\r\n  const onSubmit=(e)=>{\r\n    e.preventDefault();\r\n    if(editId === 0){\r\n      dispatch(addCategory(name))\r\n    }\r\n    else{\r\n      dispatch(updateCategory(editId, name))\r\n    }\r\n  }\r\n\r\n    return(\r\n    <div className=\"container\">\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <form onSubmit={onSubmit}> \r\n        <Modal.Header closeButton className=\"bg-success\">\r\n          <Modal.Title >Add New Category</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <input \r\n              type=\"text\" \r\n              name=\"cat_name\"  \r\n              className=\"form-control\"\r\n              value={name.cat_name}\r\n              onChange={changeHandle}\r\n              />\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          {\r\n            editId ? <Button type=\"submit\" variant=\"primary\" onClick={handleClose}>Update</Button>\r\n            :<Button type=\"submit\" variant=\"primary\" onClick={handleClose}>ADD</Button>\r\n          }\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n{/* <table className=\"tbl\">\r\n  <thead>\r\n    <tr>\r\n      <th colSpan=\"4\"><Button variant=\"success\" onClick={handleShow}  className=\"right\">ADD Category</Button></th>\r\n    </tr>\r\n    <tr>\r\n      <th>S. No.</th>\r\n      <th>Category</th>\r\n      <th colSpan=\"2\">Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {\r\n      Data.catData.map((cat, i)=>(\r\n      <tr key={i}>\r\n      <td>{i+1}</td>\r\n      <td>{cat.cat_name}</td>\r\n      <td><button onClick={()=>dispatch(deleteCategory(`${cat._id}`))}>Delete</button></td>\r\n      <td><button onClick={()=>editData((`${cat._id}`))}>Edit</button></td>\r\n    </tr>\r\n      ))\r\n    }\r\n  </tbody>\r\n</table> */}\r\n     \r\n<div className={classes.root}>\r\n        <Grid container spacing={0}>\r\n        <Grid container spacing={0} className={classes.heading}>\r\n          <Grid item xs={12} sm={8} >\r\n            <Typography >Category Data</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography style={{color: \"green\"}} onClick={handleShow}><AddIcon/>ADD Category</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={0} className={classes.head}>\r\n          <Grid item xs={12} sm={2}>\r\n            <Typography >S.No.</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography >Category</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography >Action</Typography>\r\n          </Grid>\r\n        </Grid>\r\n          {\r\n        Data.catData.map((cat, i)=>(\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} sm={2}>\r\n              <Typography className={classes.Typography}>{i+1}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography className={classes.Typography}>{cat.cat_name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Typography className={classes.deleteIcon} onClick={()=>dispatch(deleteCategory(`${cat._id}`))}><DeleteIcon/></Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Typography className={classes.editIcon} onClick={()=>editData((`${cat._id}`))}><BorderColorIcon/></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n        </Grid>\r\n    </div>\r\n   </div>\r\n    )\r\n}\r\n/* import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport {getAllCategory, addCategory, getCategory, deleteCategory, updateCategory } from './../../redux'\r\n\r\nclass Category extends Component {\r\n      constructor(props) {\r\n        super(props)\r\n        this.state= {\r\n          show: false,\r\n          editId: null, \r\n          formValues:{\r\n            cat_name: \"\"\r\n          }\r\n        }\r\n      }\r\n      handleClose = () => {\r\n        this.setState({\r\n          show: false\r\n        })\r\n        \r\n      };\r\n      handleShow = () =>  {\r\n        this.setState({\r\n          show: true,\r\n        })\r\n      }\r\n      componentDidMount() {\r\n        //this.props.getAllCategory()\r\n        this.props.getAllCategory()\r\n      }\r\n      onEdit=(id)=> {\r\n        const editdata=this.props.catData.find((post) => (post._id === id ?  post: null))\r\n          this.handleShow()\r\n         this.setState({\r\n            editId:id,\r\n            formValues:{\r\n              cat_name: editdata.cat_name\r\n            }\r\n          })\r\n      }\r\n      Reset=()=> {\r\n          \r\n      }\r\n  render() {\r\n    return (\r\n      <Formik\r\n      initialValues= {\r\n        this.state.formValues\r\n      }\r\n      enableReinitialize={true} \r\n      validationSchema = {\r\n          Yup.object().shape({\r\n          cat_name: Yup.string()\r\n              .required('Category is required'),\r\n          })\r\n      }\r\n      onSubmit={(values)=> {\r\n        if(this.state.editId !==null)\r\n        {\r\n          console.log(this.editId)\r\n          this.props.updateCategory(this.state.editId, values)\r\n          this.handleClose()\r\n        }\r\n        else{\r\n          this.props.addCategory(values)\r\n          this.handleClose()\r\n        }\r\n        this.setState({\r\n          editId:null,\r\n          formValues:{\r\n            cat_name: \"\"\r\n          }\r\n        })\r\n      }}\r\n     >\r\n       \r\n    {({values, errors, touched, handleChange, handleBlur , handleSubmit, isSubmitting}) => (\r\n        <div className=\"container\">\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <form onSubmit={handleSubmit}> \r\n          <Modal.Header closeButton className=\"bg-success\">\r\n            <Modal.Title >Add New Category</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <input \r\n                type=\"text\" \r\n                name=\"cat_name\"  \r\n                className=\"form-control\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.cat_name}\r\n                />\r\n                <span style={{color: \"red\"}}>{errors.cat_name && touched.cat_name ? errors.cat_name:null}</span>\r\n              </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button type=\"reset\" variant=\"dark\" onClick={this.Reset}>Reset</Button>\r\n            {\r\n              this.state.editId? <Button type=\"submit\" variant=\"primary\" onClick={this.handleClose}>Update</Button>\r\n              :<Button type=\"submit\" variant=\"primary\">ADD</Button>\r\n            }\r\n          </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n              <table className=\"tbl\">\r\n                <thead>\r\n                  <tr>\r\n                    <th colSpan=\"4\"><Button variant=\"success\" onClick={this.handleShow}  className=\"right\">ADD Category</Button></th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>S. No.</th>\r\n                    <th>Category</th>\r\n                    <th colSpan=\"2\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    this.props.catData.map((cat, i)=>(\r\n                    <tr key={i}>\r\n                    <td>{i+1}</td>\r\n                    <td>{cat.cat_name}</td>\r\n                    <td><button onClick={()=>this.props.deleteCategory(`${cat._id}`)}>Delete</button></td>\r\n                    <td><button onClick={()=>this.onEdit(`${cat._id}`)}>Edit</button></td>\r\n                  </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              </table>\r\n          </div>\r\n      )}\r\n     </Formik>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps=(state) =>{\r\n  return {\r\n    catData: state.category.catData\r\n  }\r\n}\r\nexport default connect(mapStateToProps,{getAllCategory, addCategory, getCategory, deleteCategory, updateCategory })(Category) */\r\n\r\n","C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\dashbaord.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\dashbaord.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\multi_upload.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\admin\\signle_upload.js",[],"C:\\xampp\\htdocs\\product\\client-react\\src\\pages\\super_admin\\alluser.js",["197","198","199","200"],"import React , {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useParams, useHistory, useLocation}from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getAllUser, getUSER} from './../../redux'\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\nexport default function AllUser() {\r\n    const classes = useStyles();\r\n    const Data = useSelector(state => state.user.userData)\r\n    const auth = useSelector(state => state.auth)\r\n    \r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const location=useLocation()\r\n    useEffect(() => {\r\n      dispatch(getAllUser());\r\n    },[]);\r\n    const handleLocation=(user) => {\r\n      location.state=user;\r\n      console.log(location)\r\n      console.log(history)\r\n    }\r\n    \r\n    const rowdata= Data.map((user,i) => (\r\n        <StyledTableRow key={i}>\r\n          <StyledTableCell ><Link  to={`/superadmin/users/${user._id}`} onClick={()=> handleLocation(user)}>{user.fname} {user.mname} {user.lname}</Link></StyledTableCell>\r\n          <StyledTableCell align=\"right\">{user.email}</StyledTableCell>\r\n          <StyledTableCell align=\"right\">{user.gender}</StyledTableCell>\r\n          <StyledTableCell align=\"right\">{user.address}</StyledTableCell>\r\n          <StyledTableCell align=\"right\">{user.state}</StyledTableCell>\r\n          <StyledTableCell align=\"right\">{user.city}</StyledTableCell>\r\n          <StyledTableCell align=\"right\">{user.zip}</StyledTableCell>\r\n        </StyledTableRow>\r\n      ))\r\n    return (\r\n      <>\r\n      <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Email</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Gender</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Address</StyledTableCell>\r\n            <StyledTableCell align=\"right\">State</StyledTableCell>\r\n            <StyledTableCell align=\"right\">City</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Zip</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            rowdata\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\product\\client-react\\src\\redux\\reducer\\loaderReducer.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":10,"column":9,"nodeType":"207","messageId":"208","endLine":10,"endColumn":15},{"ruleId":"205","severity":1,"message":"209","line":8,"column":11,"nodeType":"207","messageId":"208","endLine":8,"endColumn":16},{"ruleId":"201","replacedBy":"210"},{"ruleId":"203","replacedBy":"211"},{"ruleId":"205","severity":1,"message":"212","line":1,"column":75,"nodeType":"207","messageId":"208","endLine":1,"endColumn":80},{"ruleId":"205","severity":1,"message":"213","line":3,"column":9,"nodeType":"207","messageId":"208","endLine":3,"endColumn":19},{"ruleId":"205","severity":1,"message":"214","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"215","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":16},{"ruleId":"205","severity":1,"message":"216","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":22},{"ruleId":"205","severity":1,"message":"217","line":7,"column":25,"nodeType":"207","messageId":"208","endLine":7,"endColumn":30},{"ruleId":"205","severity":1,"message":"218","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":16},{"ruleId":"205","severity":1,"message":"219","line":37,"column":11,"nodeType":"207","messageId":"208","endLine":37,"endColumn":18},{"ruleId":"205","severity":1,"message":"220","line":38,"column":11,"nodeType":"207","messageId":"208","endLine":38,"endColumn":19},{"ruleId":"205","severity":1,"message":"221","line":39,"column":11,"nodeType":"207","messageId":"208","endLine":39,"endColumn":21},{"ruleId":"205","severity":1,"message":"222","line":41,"column":11,"nodeType":"207","messageId":"208","endLine":41,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":18,"column":9,"nodeType":"225","endLine":18,"endColumn":11,"suggestions":"226"},{"ruleId":"205","severity":1,"message":"227","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":24},{"ruleId":"205","severity":1,"message":"228","line":4,"column":9,"nodeType":"207","messageId":"208","endLine":4,"endColumn":17},{"ruleId":"205","severity":1,"message":"229","line":68,"column":9,"nodeType":"207","messageId":"208","endLine":68,"endColumn":17},{"ruleId":"205","severity":1,"message":"230","line":2,"column":18,"nodeType":"207","messageId":"208","endLine":2,"endColumn":23},{"ruleId":"205","severity":1,"message":"231","line":18,"column":18,"nodeType":"207","messageId":"208","endLine":18,"endColumn":22},{"ruleId":"205","severity":1,"message":"227","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"232","line":14,"column":20,"nodeType":"207","messageId":"208","endLine":14,"endColumn":34},{"ruleId":"205","severity":1,"message":"230","line":3,"column":18,"nodeType":"207","messageId":"208","endLine":3,"endColumn":23},{"ruleId":"205","severity":1,"message":"231","line":3,"column":25,"nodeType":"207","messageId":"208","endLine":3,"endColumn":29},{"ruleId":"205","severity":1,"message":"233","line":55,"column":9,"nodeType":"207","messageId":"208","endLine":55,"endColumn":16},{"ruleId":"205","severity":1,"message":"234","line":10,"column":11,"nodeType":"207","messageId":"208","endLine":10,"endColumn":20},{"ruleId":"205","severity":1,"message":"235","line":11,"column":11,"nodeType":"207","messageId":"208","endLine":11,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":89,"column":9,"nodeType":"225","endLine":89,"endColumn":11,"suggestions":"236"},{"ruleId":"205","severity":1,"message":"237","line":125,"column":9,"nodeType":"207","messageId":"208","endLine":125,"endColumn":21},{"ruleId":"205","severity":1,"message":"238","line":137,"column":38,"nodeType":"207","messageId":"208","endLine":137,"endColumn":51},{"ruleId":"239","severity":1,"message":"240","line":360,"column":35,"nodeType":"241","endLine":360,"endColumn":101},{"ruleId":"205","severity":1,"message":"242","line":34,"column":11,"nodeType":"207","messageId":"208","endLine":34,"endColumn":18},{"ruleId":"223","severity":1,"message":"243","line":39,"column":7,"nodeType":"225","endLine":39,"endColumn":9,"suggestions":"244"},{"ruleId":"205","severity":1,"message":"245","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"205","severity":1,"message":"246","line":10,"column":35,"nodeType":"207","messageId":"208","endLine":10,"endColumn":47},{"ruleId":"205","severity":1,"message":"247","line":11,"column":38,"nodeType":"207","messageId":"208","endLine":11,"endColumn":49},{"ruleId":"223","severity":1,"message":"224","line":67,"column":5,"nodeType":"225","endLine":67,"endColumn":7,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":75,"column":7,"nodeType":"251","messageId":"252","endLine":75,"endColumn":37,"fix":"253"},{"ruleId":"205","severity":1,"message":"254","line":11,"column":9,"nodeType":"207","messageId":"208","endLine":11,"endColumn":18},{"ruleId":"205","severity":1,"message":"255","line":13,"column":21,"nodeType":"207","messageId":"208","endLine":13,"endColumn":28},{"ruleId":"205","severity":1,"message":"222","line":40,"column":11,"nodeType":"207","messageId":"208","endLine":40,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":47,"column":7,"nodeType":"225","endLine":47,"endColumn":9,"suggestions":"256"},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'logOut' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.",["257"],["258"],"'ERROR' is defined but never used.","'useHistory' is defined but never used.","'toast' is defined but never used.","'LOADING' is defined but never used.","'useRef' is defined but never used.","'Sider' is assigned a value but never used.","'NavLink' is defined but never used.","'homeRef' is assigned a value but never used.","'aboutRef' is assigned a value but never used.","'contactRef' is assigned a value but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["259"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'userdata' is assigned a value but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'setCurrentUser' is defined but never used.","'signOut' is assigned a value but never used.","'FILE_SIZE' is assigned a value but never used.","'SUPPORTED_FORMATS' is assigned a value but never used.",["260"],"'handleDelete' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id.userId'. Either include them or remove the dependency array.",["261"],"'withStyles' is defined but never used.","'shallowEqual' is defined but never used.","'getCategory' is defined but never used.",["262"],"no-useless-computed-key","Unnecessarily computed property ['cat_name'] found.","Property","unnecessarilyComputedProperty",{"range":"263","text":"264"},"'useParams' is defined but never used.","'getUSER' is defined but never used.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"269","fix":"270"},{"desc":"266","fix":"271"},[2211,2223],"'cat_name'",{"desc":"266","fix":"272"},"Update the dependencies array to be: [dispatch]",{"range":"273","text":"274"},{"range":"275","text":"274"},"Update the dependencies array to be: [dispatch, id.userId]",{"range":"276","text":"277"},{"range":"278","text":"274"},{"range":"279","text":"274"},[675,677],"[dispatch]",[2671,2673],[1144,1146],"[dispatch, id.userId]",[1959,1961],[1546,1548]]